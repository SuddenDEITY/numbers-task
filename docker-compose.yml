version: '3.9'

services:
  frontend:
    restart: always
    command : npm start
    container_name: front
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    stdin_open: true
    depends_on:
      - web
  celery:
      build: ./backend/
      restart: always
      command: celery -A config worker -B
      volumes:
        - .:/code
      links:
        - redis
      depends_on:
        - web
        - redis
  cache:
    image: memcached
    ports:
      - "11211:11211"
    entrypoint:
      - memcached
  redis:
    image: redis
    restart: always
    container_name: 'numbers-task_redis'
    command: redis-server
    ports:
      - '6379:6379'
  web:
   build:
      context: ./backend/
      dockerfile: Dockerfile
   command:  >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
   volumes:
    - .:/backend
   ports:
    - 8000:8000
   depends_on:
    - db
  db:
   image: postgres:latest
   volumes:
    - postgres_data:/var/lib/postgresql/data/
   environment:
    - "POSTGRES_HOST_AUTH_METHOD=trust"
volumes:
   postgres_data: